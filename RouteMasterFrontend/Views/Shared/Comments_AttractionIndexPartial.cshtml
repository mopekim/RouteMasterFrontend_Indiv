@{
    var account = Context.Request.HttpContext.User.Identity.Name;
    var memberId = Context.Request.Cookies["Id"];
}
<style>
    .starIndex li {
        color: #ccc;
       
    }

    .pointer {
        cursor: pointer;
    }

    .panel li {
        cursor: pointer;
    }

    .panel li.blank {
        color: #ccc;
    }

    .panel li.hover {
        color: #ff0;
    }

    .panel li.active,
    .starIndex i.active
    {
        color: #f90;
    }

    .tip,
    .result {
        margin-top: 10px;
        font-size: 1.2rem;
    }

    .zoomIn {
        cursor: zoom-in;
        width: 80px;
        height: 80px;
    }

    .dateStyle{
        color:lightseagreen;
        align-self:center;
        font-weight:normal;
    }

    /*.vertical.carousel .carousel-item {
        overflow: hidden;
    }

    .vertical.carousel .carousel-item-next:not(.carousel-item-start),
    .vertical.carousel .active.carousel-item-end {
        transform: translateY(100%);
    }

    .vertical.carousel .carousel-item-prev:not(.carousel-item-end),
    .vertical.carousel .active.carousel-item-start {
        transform: translateY(-100%);
    }

    .vertical.carousel .carousel-indicators {
        top: 0;
        left: unset;
        margin-left: unset !important;
        margin-right: 1rem;
        flex-direction: column;
    }

        .vertical.carousel .carousel-indicators [data-bs-target] {
            height: 30px;
            width: 3px;
        }

    .vertical.carousel .carousel-control-prev,
    .vertical.carousel .carousel-control-next {
        width: 100%;
        height: 60px;
    }

    .vertical.carousel .carousel-control-prev-icon,
    .vertical.carousel .carousel-control-next-icon {
        transform: rotateZ(90deg);
    }

    .vertical.carousel .carousel-control-next {
        top: unset;
        bottom: 0;
    }*/

   /* .carousel-indicators li{
        width: 10px;
        height: 10px;
        border-radius: 100%; 
        background-color: #ccc; 
        margin: 0 5px;
        transition: background-color 0.3s ease-in-out;
    }*/

   

</style>
@*<div>@Model.Id</div>*@
<div id="app">
    
        <div class="row mb-2 mt-2">
            <div class="col-3">
                <select v-model="selected" id="commentOrder" @@change="commentDisplay">
                    <option value="0" selected>最新留言</option>
                    <option value="1">星星評分高至低</option>
                    <option value="2">星星評分低至高</option>
                    <option value="3">停留時間由高至低</option>
                    <option value="4">停留時間由低至高</option>
                    <option value="5">花費由高至低</option>
                    <option value="6">花費由低至高</option>
                </select>
            </div>     
            <div class="col-3 ms-auto text-end">
                <button v-if="userAccount" type="button" class="btn btn-primary btn-sm fs-6" data-bs-toggle="modal" data-bs-target="#staticBackdrop" @@click="starRating">
                    撰寫評論
                </button>
            </div>
        </div>
              
        <div v-for="(item, index) in indexVM" :key="index" class="card mb-3 border-info">
        <div class="row">
            <div class="col-md-1 ms-auto">
                <img :src="getImgPath(item.profile)" style="height: 78px; width: 78px;" class="mx-auto" />
            </div>
            <div class="col-md-11">
                <div class="card-header bg-transparent border-warning d-flex">
                    <ul class="list-unstyled">
                        <li class="fs-4">{{item.account}}</li>
                        <li>{{item.gender? "女性" : "男性"}} | {{item.address}}</li>
                    </ul>                   
                </div>
                <div class="card-body bg-light">
                    <div class="d-flex">
                        <h4 class="card-title me-3">{{item.attractionName}}</h4>
                        <p class="me-auto fs-6 dateStyle">{{item.createDate}}</p>
                        <a v-if="item.edit" data-bs-toggle="modal" data-bs-target="#exampleModal" class="pointer" style="color:black" @@click="labelComment(item.id)" data-bs-placement="bottom" title="檢舉">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
                                <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z" />
                            </svg>
                        </a>
                    </div>
                    <div class="starIndex d-flex mb-2">
                        <p>{{item.score}}</p>
                        <ul class="d-flex list-unstyled">
                            <li v-for="starIndex in 5" :key="starIndex">
                                <i class="fa fa-star fa-fw" :class="{'active':starIndex <= item.score}">

                                </i>
                            </li>
                        </ul>
                        <p v-if="item.price" class="card-text ms-3">| {{ "停留" + item.stayHours + "小時"}} | {{ "花費" + item.price + "元"}}</p>
                    </div>
                    <ul v-if="item.imageList.length" class="d-flex list-unstyled mb-2">
                        <li v-for="(photo,num) in item.imageList" :key="num" class="me-3">
                            <img :src="getImgPath(photo)" class="zoomIn" @@click="openImageModal(item.imageList, num)" />
                        </li>
                    </ul>
                    <p v-if="item.content" class="card-text">{{item.content}}</p>
                </div>
            </div>
        </div>
    </div>

        <!-- Modal carousel -->
        <div class="modal fade bg-black" id="imgModal" tabindex="-1" aria-labelledby="imgModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="carouselImg" class="carousel carousel-dark slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            <div :class="{ 'carousel-item': true, 'active': num === 0 }" v-for="(photo,num) in carouselList" :key="num">
                                <img v-bind:src="getImgPath(photo)" class="d-block w-100">
                            </div>

                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselImg" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#carouselImg" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>

                        <div class="carousel-indicators">
                            <button type="button" v-for="(photo, num) in carouselList"
                                    :key="num"
                                    data-bs-target="#carouselImg"
                                    :data-bs-slide-to="num"
                                    :class="{'active': num === 0}">
                            </button>

                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>

        <!-- Modal新增評論 -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel">新增評論</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @@click="clearWords(starpoint)"></button>
                    </div>
                    <div class="modal-body row">
                        <div class="col-md-4">
                            <div class="mb-2">
                                <p v-show="starAlert" style="color:red" class="fs-6">{{starAlert}}</p>
                            </div>
                            <div class="panel mb-3">
                                <div class="tip">請點選評分*</div>
                                <div class="result">{{"您選擇了" + starpoint + "分"}}</div>
                                <ul class="d-flex list-unstyled" @@mouseout="clearAlert">
                                    <li><i class="fa fa-star fa-fw"></i></li>
                                    <li><i class="fa fa-star fa-fw"></i></li>
                                    <li><i class="fa fa-star fa-fw"></i></li>
                                    <li><i class="fa fa-star fa-fw"></i></li>
                                    <li><i class="fa fa-star fa-fw"></i></li>
                                </ul>
                            </div>
                            <div class="mb-3">
                                <input v-model="hours" type="number" class="form-control" id="stayHours" placeholder="停留時間(小時)" min="0" max="24">
                            </div>
                            <div class="mb-3">
                                <input v-model="price" type="number" class="form-control" id="cost" placeholder="花費(新台幣)" min="0">
                            </div>
                            <div class="mb-3">
                                <textarea v-model="content" class="form-control" placeholder="評論內容" id="paragraph" style="height: 300px"></textarea>            
                            </div>
                            <div class="mb-3">
                                <input id="file1" type="file" name="file1" class="form-control" multiple="multiple" accept="image/*" @@change="previewMultiImg" />
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="row mb-3">
                                <p class="mt-3 col-2">圖片預覽:</p>
                                <button type="button" class="btn btn-primary col-2 ms-auto me-2" @@click="reset">清空預覽圖</button>
                            </div>
                            
                            <div v-if="preview_list.length" class="row gy-3">
                                <div v-for="item, index in preview_list" :key="index" class="col-4">
                                    <img :src="item" class="img-fluid" style="height:180px" />
                                    @*<p class="mb-0">file name: {{ image_list[index].name }}</p>
                                    <p>size: {{ image_list[index].size/1024 }}KB</p>*@
                                </div>
                            </div>
                        </div>
                        
                        
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="shutDown" @@click="clearWords(starpoint)">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="sendForm">送出</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Modal檢舉 -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">檢舉評論</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @@click="clearPick"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios1" v-model="pick" :value="1">
                            <label class="form-check-label" for="gridRadios1">
                                誤導性或垃圾內容
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios2" v-model="pick" :value="2">
                            <label class="form-check-label" for="gridRadios2">
                                仇恨或騷擾/濫用內容
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" v-model="pick" :value="3">
                            <label class="form-check-label" for="gridRadios3">
                                暴力或令人反感的內容
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios4" v-model="pick" :value="4">
                            <label class="form-check-label" for="gridRadios4">
                                有害的危險行為
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios5" v-model="pick" :value="5">
                            <label class="form-check-label" for="gridRadios5">
                                符合上述多個選項
                            </label>
                        </div>
                        <div class="mt-2">                         
                            <button type="button" class="btn btn-danger" @@click="fillCheck">我要檢舉</button>
                        </div>
                    </div>
                </div>


            </div>
        </div>

         
</div>

<script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
<script src="https://kit.fontawesome.com/ad2e9fef09.js" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const vueApp={
        data(){
            return{
                indexVM:[],
                comm:{},
                selected:0,
                spotId: @Html.Raw(Json.Serialize(Model.Id)),
                pick:"",
                commentid:0,
                errors:[],
                starpoint:null,
                hours: null,
                price: null,
                content:"",
                starAlert:"",
                preview_list: [],
                image_list: [],
                userAccount: "@account",
                carouselList: [],

                            
            }
        },
        mounted: function () {
            let _this = this;
            _this.commentDisplay();
           
        },
        methods:{
            openImageModal: function (images, Index) {
                let _this = this;
                _this.carouselList = images;
                const imgModal = new bootstrap.Modal(document.getElementById('imgModal'));
                imgModal.show();

                const carouselImg = new bootstrap.Carousel(document.getElementById('carouselImg'), {
                    interval: 1500,
                    wrap: true,

                });

                var init = document.querySelector(`#carouselImg [data-bs-slide-to="${Index}"]`);

                carouselImg.from(init);
            },
            previewMultiImg: function (event) {
                let _this = this;
                var input = event.target;
                var count = input.files.length;
                var index = 0;
                if(input.files){
                    while (count--) {
                        var reader = new FileReader();
                        reader.onload = (e) => {
                            _this.preview_list.push(e.target.result);
                        }
                        _this.image_list.push(input.files[index]);
                        reader.readAsDataURL(input.files[index]);
                        index++;
                    }
                }
            },
            reset:function(){
                let _this = this;
                var file1 = document.querySelector("#file1");
                file1.value = "";
                _this.preview_list=[];
                _this.image_list=[];
                
            },
            formSweetAlert:function(){
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: '評論新增成功',
                    showConfirmButton: false,
                    timer: 1000
                })
            },
            sweetAlert:function(){
                Swal.fire(
                    '已成功檢舉',
                    'RouteMaster團隊將進一步審核',
                    'success'
                );
                console.log("good");
            },
            commentDisplay: async function(){
                let _this=this;
                var data={};
                data.Manner=_this.selected;
                data.SpotId=_this.spotId;
                var uri = "https://localhost:7145/Comments_Attraction/GetComments";
                const response = await fetch(uri, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)

                });
                if (response.ok) {
                    _this.indexVM = await response.json();
                    console.log(_this.indexVM);
                    for (let i = 0; i < _this.indexVM.length;i++){
                        _this.comm = _this.indexVM[i];
                        _this.comm.edit = _this.userAccount? true:false;
                        if (_this.comm.account == _this.userAccount) {
                            _this.comm.edit=false;
                        }
                    }
                 
                  
                }
                else {
                    console.error('Error:', response.status);
                }
            },
            getImgPath: function (photo) {            
                return `@Url.Content("~/MemberUploads/${photo}")`;
    
            },
            labelComment:function(id){
                let _this = this;
                _this.commentid=id;
                console.log(_this.userAccount);
                console.log(_this.commentid);
                
            },
            fillCheck: function(){
                let _this = this;
                if(_this.pick){
                    console.log(_this.pick);
                    console.log(_this.commentid);
                    var uri = `https://localhost:7145/Comments_Attraction/ReportComment?targetId=${_this.commentid}&reasonId=${_this.pick}`;

                    fetch(uri, {
                        method: "POST"
                    })
                        .then(response => response.text()) // 使用 response.text() 獲取回傳的字串
                        .then(result => {
                            console.log(result); // 在控制台中輸出後端回傳的字串
                            if (_this.comm.id == _this.commentid) {
                                _this.comm.edit = false;
                            }
                                $('#exampleModal').modal('hide');
                            _this.sweetAlert();

                        })
                        .catch(error => {
                            console.error('There was a problem with the fetch operation:', error);
                        });
                } else {
                    alert("沒有挑選");
                }

            },
            clearPick:function(){
                let _this = this;
                _this.pick="";
                console.log(_this.pick);
                
            },
            starRating:function(){
                let _this = this;

                var panel = document.querySelector(".panel");
                var result = panel.querySelector(".result");
                var liItems = panel.querySelectorAll("li");

                result.style.display="none";

                liItems.forEach(function(liItem, index){
                    liItem.classList.add("blank");

                    liItem.addEventListener("mouseover", function () {
                        for (var j = 0; j <= index; j++) {
                            liItems[j].classList.remove("blank");
                            liItems[j].classList.add("hover");
                        }
                    });

                    liItem.addEventListener("mouseout", function () {
                        liItems.forEach(function (item) {
                            item.classList.remove("hover");
                            item.classList.add("blank");
                        });
                    });

                    liItem.addEventListener("click", function () {
                        liItems.forEach(function (item, idx) {
                            if (idx <= index) {
                                item.classList.remove("blank");
                                item.classList.add("active");
                            } else {
                                item.classList.remove("active");
                                item.classList.add("blank");
                            }
                        });
                        panel.querySelector(".tip").style.display = "none";
                        _this.starpoint = index + 1;
                        result.style.display = "block";

                    });

                });

            },
            sendForm: function () {
                let _this=this;
                if(_this.starpoint){
                    const formData = new FormData();
                    formData.append('AttractionId', _this.spotId);
                    formData.append('Score', _this.starpoint);
                    formData.append('StayHours', _this.hours);
                    formData.append('Price', _this.price);
                    formData.append('Content', _this.content);

                    for (let i = 0; i < _this.image_list.length;i++){
                        formData.append('Files', _this.image_list[i]);
                    }

                    fetch("https://localhost:7145/Comments_Attraction/NewComment",{
                        method: "POST",
                        body: formData,
                    }
                    ).then(response => response.text())
                    .then(result=>{
                        console.log(result);
                        _this.formSweetAlert();

                        _this.commentDisplay();

                            var closeBut = document.getElementById("shutDown");
                            var clickEvent = new Event("click", {
                                bubbles: false,
                                cancelable: true
                            });
                            closeBut.dispatchEvent(clickEvent);

                    }).catch(error=>{
                            console.error('There was a problem with the fetch operation:', error);
                    });
                   
                }
                else{
                    _this.starAlert = "請點選星星評分*";
                    
                    
                }
            },
            clearAlert:function(){
                let _this = this;
                _this.starAlert="";
            },
            clearWords:function(point){
                let _this = this;
                var panel = document.querySelector(".panel");
                var liItems = panel.querySelectorAll("li");
                var file1 =document.querySelector("#file1");
                console.log(point);

                liItems.forEach(function (item, idx) {
                    if (idx <= point-1) {
                        item.classList.remove("active");
                      
                    }
                });
                _this.hours="";
                _this.price="";
                _this.content="";
                file1.value="";
              
            },

        }

    }

    var app = Vue.createApp(vueApp).mount("#app");
</script>