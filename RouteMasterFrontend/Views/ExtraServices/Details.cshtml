@{
    var extraServiceId = ViewBag.ExtraServiceId;
    var cartIdFromCookie = int.Parse(Context.Request.Cookies["CartId"] ?? "0");
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

@section Styles{
    <style>

        .date-picker {
            width: 300px;
            border: 1px solid #ccc;
            padding: 10px;
            margin: 50px auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
        }

        .day {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            cursor: pointer;
        }

        .selected {
            background-color: #3498db;
            color: white;
        }

        .other-month {
            color: #ccc;
        }

        .day-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            border: 0.5px solid transparent;
            transition: border 0.3s ease-in-out;
        }

            .day-container:hover {
                border-color: #ccc;
                /* 使用者懸停時，邊框顏色變為 #ccc */
            }


        .price {
            font-size: 0.8em;
        }



        .informationBigContainer {
            display: flex;
            margin-left: 200px; /* 向右平移 20px */
            align-items: center; /* 在 y 轴上居中 */
        }


        .informationContainer {
            margin-left: 200px; /* 向右平移 20px */
            align-items: center; /* 在 y 轴上居中 */
        }

        .disabled {
            opacity: 0.5;
            /* 設置透明度為 50% */
            position: relative;
        }


        .image-container {
            width: 500px; /* 调整宽度 */
        }

        .textbox {
            padding: 10px;
            border: 1px solid transparent; /* 初始設定為透明的框線 */
            transition: border-color 0.3s; /* 添加過渡效果 */
        }

            .textbox:hover {
                border-color: #ccc; /* 鼠標懸停時改變框線顏色 */
            }




          
    </style>
}
<div id="app">


    <div class="card mb-3" style="max-width: 2000px;">
        <div class="row g-0">
            <div class="col-md-5">
                <img v-bind:src="image" class="img-fluid rounded-start w-100" />
            </div>
            <div class="col-md-7">
                <div class="card-body">
                    <h5 class="card-title">{{name}}</h5>
                    <div class="d-flex">
                        <p class="card-text"><small class="text-body-secondary">{{regionName}}</small></p>
                        <p class="card-text"><small class="text-body-secondary">{{attractionName}}</small></p>
                    </div>
                    <p class="card-text">{{description}}</p>

                </div>
            </div>
        </div>
    </div>




    <div class="row">
        <div class="date-picker col-6">
            <div class="header">
                <button id="prevMonth" class="btn btn-outline-secondary" @@click="changeMonth(-1)"><i class="fa-solid fa-left-long"></i></button>
                <h2 id="monthYear" v-model>{{currentYear}}年  {{currentMonth}}月</h2>
                <button id="nextMonth" class="btn btn-outline-secondary" @@click="changeMonth(1)"><i class="fa-solid fa-right-long"></i></button>
            </div>
            <div class="calendar" id="calendar">
                <div v-for="(dateObj, index) in calendarDates" :key="date">
                    <div class="day-container" v-bind:class="{'disabled':dateObj.price==null,'selected':dateObj.selected==true}"
                         v-bind:data-id="dateObj.id "
                         v-bind:data-quantity="dateObj.quantity" @@click="dateObj.price!=null&&selectDate(dateObj)">
                        <template v-if="dateObj.date === null">
                            <div class="day other-month"></div>
                            <span class="price"> </span>
                        </template>
                        <template v-else-if="dateObj.price !== null">
                            <div class="day">{{ dateObj.date.getDate() }}</div>
                            <span class="price">{{ dateObj.price }}</span>
                        </template>
                        <template v-else>
                            <div class="day">{{ dateObj.date.getDate() }}</div>
                            <span class="price">X</span>
                        </template>
                    </div>
                </div>
            </div>
        </div>
        <div id="buyingContainer" class="col-6">
            <br />
            <br />
            <br />
            <h4>{{selectedDate}}</h4>
            <br />

            <div v-if="selectedDate!='請選擇日期'">
                <br />
                <h5>價格:{{selectedPrice}}</h5>
                <br />
                <h5>可購買數量:{{selectedQuantity}}</h5>
                <br />
                <div>
                    <label class="border-1  w-25">選擇購買數量</label>
                    <input class="m-1 p-1 " v-model="inputQuantity" type="number" min="1" v-bind:max="selectedQuantity" />
                </div>
                <button @@click="addToCart()" class="btn btn-primary">加入購物車</button>


            </div>

            
        
        </div>
    </div>      
</div>





@section Scripts{
    <script src="https://kit.fontawesome.com/f9e3b12327.js" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"
            integrity="sha512-uMtXmF28A2Ab/JJO2t/vYhlaa/3ahUOgj1Zf27M5rOo8/+fcTUVH0/E0ll68njmjrLqOBjXM3V9NiPFL5ywWPQ=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    

    <script>
        let baseAddress = "https://localhost:7251";
        let vueApp = {
            data() {
                return {
                    extraServiceId: @extraServiceId,
                    name:"",
                    description:"",
                    image:"",
                    attractionName:"",
                    regionName:"",
                    cartId: @cartIdFromCookie,
                    selectedDate:"請選擇日期",
                    selectedProductId:"",
                    selectedPrice:"",
                    selectedQuantity:"",
                    inputQuantity:"",
                    calendarDates: [],
                    currentMonth:Number("8"),
                    currentYear:Number("2023"),


                };
            },
            mounted: function () {
                let _this = this;

                _this.getTargetExtraServiceDto();
                _this.updateCalendar();
            },
            computed:{
                firstDay(){
                    return new Date(this.currentYear,this.currentMonth-1,1).getDay()
                },
                daysInMonth() {
                    return new Date(this.currentYear, this.currentMonth , 0).getDate();
                }
            },
            methods: {
                getTargetExtraServiceDto: function () {
                    let _this = this;
                    let request = {};                  

                    axios.post(`${baseAddress}/api/ExtraServiceVuePage/Id?extraServiceId=${_this.extraServiceId}`).then(response => {
                   

                        _this.extraServiceId = response.data.id
                        _this.name = response.data.name;
                        _this.description = response.data.description;
                        _this.image = response.data.image;
                        _this.attractionName = response.data.attractionName
                        _this.regionName = response.data.regionName;


                    }).catch(err => {
                        alert(err);
                    })
                },             
                changeMonth:function(change){
                    this.currentMonth+=change;
                    if (this.currentMonth<1){
                        this.currentMonth=12;
                        this.currentYear-=1;
                    }else if(this.currentMonth >12){
                        this.currentMonth=1;
                        this.currentYear+=1;
                    }


                    this.updateCalendar();
                },
                updateCalendar: function(){
                    //console.log('updateCalendar7788899999');
                    this.generateCalendarDates();
                },
                generateCalendarDates:function(){                
                    this.calendarDates = [];
                    for (let i = 0; i < this.firstDay; i++) {
                        this.calendarDates.push({ date: null, price: null, quantity: 0, id: 0, selected :false});
                    }
                    for (let i = 1; i <= this.daysInMonth; i++) {
                        const currentDate = new Date(this.currentYear, this.currentMonth - 1, i);                        
                        this.calendarDates.push({ date: currentDate, price: null,quantity:0,id:0,selected:false });
                    }
                    //console.log(this.calendarDates)
                    const postData={
                        extraServiceId: this.extraServiceId,
                        currentMonth: this.currentMonth,
                        currentYear: this.currentYear
                    };


                    axios.post(`${baseAddress}/api/ExtraServiceVuePage/getProducts`, postData)
                    .then(response=>{               
                        //console.log('response啦')
                            //console.log(response)

                        for(let i=0;i<response.data.length;i++){
                                let dateFromIso = new Date(response.data[i].date);                               
                                for (let j = 0; j < this.calendarDates.length;j++){
                                    if (this.calendarDates[j].date!==null){
                                        if (this.calendarDates[j].date.getDate() == dateFromIso.getDate()) {
                                            
                                            this.calendarDates[j].price = response.data[i].price
                                            this.calendarDates[j].quantity = response.data[i].quantity
                                            this.calendarDates[j].id=response.data[i].id
                                        }                                      
                                    }                                                   
                                }
                        }
                            console.log(this.calendarDates)
                    }).catch(err=>{                        
                        console.log(err);
                    })                  
                },
                selectDate: function (dateObj) {
                    for (let i = 0; i < this.calendarDates.length;i++){
                        this.calendarDates[i].selected=false;
                    }
                  
                    this.selectedDate = dateObj.date.getMonth()+1+"月"+dateObj.date.getDate()+"日";
                    this.selectedProductId = dateObj.id;
                    this.selectedPrice = dateObj.price;
                    this.selectedQuantity = dateObj.quantity;
                    this.inputQuantity = 1;
                    dateObj.selected=true;                                    
                },
                addToCart:function(){
                    //加入購物車
                    const postData={
                        cartId:this.cartId,
                        extraserviceId: this.selectedProductId,
                        quantity: this.inputQuantity
                    };   
                    Swal.fire(postData);
                    fetch(`${baseAddress}/api/Carts/addextraservice`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(postData)
                    })
                        .then(response => response.json())
                        .then(data => {
                        if (data.success) {
                            Swal.fire(data.message);
                            //alert(data.message);
                            this.reloadCartItems();
                            } else {
                                alert(data.message || '加入購物車失敗');
                            }
                        })
                        .catch(error => {
                            console.log('Failed to add to cart:', error);
                        });

                    console.log('加購物車啦');
                },
                reloadCartItems() {
                    fetch('/Carts/RefreshCart')
                        .then(response => response.text())
                        .then(data => {
                            $('#Cart').html(data);
                        })
                        .catch(() => {
                            alert('Failed to reload cart items.');
                        });
                }
            }

        };
        let app = Vue.createApp(vueApp).mount('#app');
    </script>
}